import {useEffect} from "react";
import axios from "axios";
import {dehydrate, QueryClient, useQuery} from "react-query";
import Head from 'next/head'
import Link from "next/link";
import {Product} from "@/types";
import styles from '@/styles/home.module.scss'
import ProductComponent from "@/pages/product";
import {globalStore} from "@/store/globalStore";

const getProducts = async (): Promise<Array<Product> | undefined> => {
    try {
        const {data} = await axios.get("https://fakestoreapi.com/products")
        return data
    } catch (err) {
        console.error(err)
    }
}

export default function Home(): JSX.Element {
    const {data} = useQuery("products", getProducts)

    useEffect(() => {
        if (data) {
            const formattedData = data.map(x => ({...x, isFav: false}))
            globalStore.setProducts(formattedData)
        }
    }, [])

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
      </Head>
      <main className={styles.main}>
          <div className={styles.header}>
              <Link className={styles.cart} href={"cart"}>
                  Cart
              </Link>
              <Link className={styles.favourite} href={"favourite"}>
                  Favourite List
              </Link>
          </div>
          <div className={styles.products}>
              {
                  globalStore.products?.length && globalStore.products.map((product: Product) => (
                      <ProductComponent key={product.id} product={product} />
                  ))
              }
          </div>
      </main>
    </>
  )
}

export async function getStaticProps() {
    const queryClient = new QueryClient()
    await queryClient.prefetchQuery('products', getProducts)

    return {
        props: {
            dehydratedState: dehydrate(queryClient),
        }
     }
}
